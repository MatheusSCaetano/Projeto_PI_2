/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ClienteController;
import DAO.ClienteDAO;
import Model.Cliente;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MOISES
 */
public class ViewGestaoCliente extends javax.swing.JInternalFrame {
  Cliente objCliente;
    /**
     * Creates new form ViewGestaoCliente
     */
    public ViewGestaoCliente() {
        initComponents();
        objCliente = new Cliente();
        CarregarJTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        btnPesquisarid = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        btnPesquisarNome = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnPesquisarCPF = new javax.swing.JButton();
        txtCPF = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        btnCadastrar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnAtualizar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("ID:");

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        btnPesquisarid.setText("Pesquisar");
        btnPesquisarid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaridActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Nome:");

        btnPesquisarNome.setText("Pesquisar");
        btnPesquisarNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarNomeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("CPF:");

        btnPesquisarCPF.setText("Pesquisar");
        btnPesquisarCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarCPFActionPerformed(evt);
            }
        });

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisarid))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisarNome))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisarCPF)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnPesquisarNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarCPF))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Gest√£o de Registros"));

        btnCadastrar.setText("Novo");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar)
                    .addComponent(btnAlterar)
                    .addComponent(btnExcluir))
                .addGap(38, 38, 38))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Atualizar Tabela"));

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAtualizar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btnAtualizar)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/logo-icon.png"))); // NOI18N

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "CPF", "Sexo", "E-mail", "Telefone", "Rua", "Bairro", "CEP", "Cidade"
            }
        ));
        jScrollPane1.setViewportView(tblClientes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 256, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisaridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaridActionPerformed
        // TODO add your handling code here:
       
        
        
        if(txtID.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Digite um ID para realizar a busca");
        }
        else
        {
            int id = Integer.parseInt(txtID.getText());
            ArrayList<Cliente> listaCliente = ClienteDAO.consultarClienteporID(id);
            if(listaCliente.size()>0){

                DefaultTableModel tmCliente = new DefaultTableModel()
                         {
                    @Override
                    public boolean isCellEditable(final int row, final int column) {
                            return false;
                    }
            };
                tmCliente.addColumn("Id_Cliente");
                tmCliente.addColumn("Nome");
                tmCliente.addColumn("CPF");
                tmCliente.addColumn("Sexo");
                tmCliente.addColumn("Estado Civil");
                tmCliente.addColumn("Email");
                tmCliente.addColumn("Telefone");
                tmCliente.addColumn("Rua");
                tmCliente.addColumn("Bairro");
                tmCliente.addColumn("CEP");
                tmCliente.addColumn("Cidade");


                tblClientes.setModel(tmCliente);

                //Removo a coluna ID da View (JTable) mas mantenho na model para armazenar o ID
                // tblMaquina.removeColumn(tblMaquina.getColumnModel().getColumn(0));

                //Limpo a tabela, excluindo todas as linhas para depois mostrar os dados novamente
                tmCliente.setRowCount(0);

                //Para cada cliente resgatado do banco de dados, atualizo a tabela
                for (Cliente c : listaCliente) {
                    tmCliente.addRow(new Object[]{c.getIdCliente(),c.getNome(),c.getCPFSomenteNumeros(),c.getSexo(),c.getEstadoCivil(), c.getEmail(), c.getTelefone(), c.getRua(), c.getBairro(), c.getCEP(), c.getCidade()});
                }
                //Defino o tamanho para cada coluna
                //tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50); //ID
                tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50);
                tblClientes.getColumnModel().getColumn(1).setPreferredWidth(100);
                tblClientes.getColumnModel().getColumn(2).setPreferredWidth(100);
                tblClientes.getColumnModel().getColumn(3).setPreferredWidth(70);
                tblClientes.getColumnModel().getColumn(4).setPreferredWidth(70);
                tblClientes.getColumnModel().getColumn(5).setPreferredWidth(150);
                tblClientes.getColumnModel().getColumn(6).setPreferredWidth(100);
                tblClientes.getColumnModel().getColumn(7).setPreferredWidth(150);
                tblClientes.getColumnModel().getColumn(8).setPreferredWidth(70);
                tblClientes.getColumnModel().getColumn(9).setPreferredWidth(60);
                tblClientes.getColumnModel().getColumn(10).setPreferredWidth(100);
            } else{
                JOptionPane.showMessageDialog(this,"Cliente n√£o encontrado.");
            }
        }
    }//GEN-LAST:event_btnPesquisaridActionPerformed

    private void btnPesquisarNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarNomeActionPerformed
        // TODO add your handling code here:
        if(txtNome.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Digite um nome para realizar a pesquisa");
        }
        else
        {
            ArrayList<Cliente> listaCliente = ClienteDAO.consultarClientepornome(txtNome.getText());
            if(listaCliente.size()>0){
            DefaultTableModel tmCliente = new DefaultTableModel()
                     {
                    @Override
                    public boolean isCellEditable(final int row, final int column) {
                            return false;
                    }
            };
            tmCliente.addColumn("Id_Cliente");
            tmCliente.addColumn("Nome");
            tmCliente.addColumn("CPF");
            tmCliente.addColumn("Sexo");
            tmCliente.addColumn("Estado Civil");
            tmCliente.addColumn("Email");
            tmCliente.addColumn("Telefone");
            tmCliente.addColumn("Rua");
            tmCliente.addColumn("Bairro");
            tmCliente.addColumn("CEP");
            tmCliente.addColumn("Cidade");


            tblClientes.setModel(tmCliente);

            //Removo a coluna ID da View (JTable) mas mantenho na model para armazenar o ID
            // tblMaquina.removeColumn(tblMaquina.getColumnModel().getColumn(0));

            //Limpo a tabela, excluindo todas as linhas para depois mostrar os dados novamente
            tmCliente.setRowCount(0);

            //Para cada cliente resgatado do banco de dados, atualizo a tabela
            for (Cliente c : listaCliente) {
                    tmCliente.addRow(new Object[]{c.getIdCliente(),c.getNome(),c.getCPFSomenteNumeros(),c.getSexo(),c.getEstadoCivil(), c.getEmail(), c.getTelefone(), c.getRua(), c.getBairro(), c.getCEP(), c.getCidade()});
                }
                //Defino o tamanho para cada coluna
                //tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50); //ID
                tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50);
                tblClientes.getColumnModel().getColumn(1).setPreferredWidth(100);
                tblClientes.getColumnModel().getColumn(2).setPreferredWidth(100);
                tblClientes.getColumnModel().getColumn(3).setPreferredWidth(70);
                tblClientes.getColumnModel().getColumn(4).setPreferredWidth(70);
                tblClientes.getColumnModel().getColumn(5).setPreferredWidth(150);
                tblClientes.getColumnModel().getColumn(6).setPreferredWidth(100);
                tblClientes.getColumnModel().getColumn(7).setPreferredWidth(150);
                tblClientes.getColumnModel().getColumn(8).setPreferredWidth(70);
                tblClientes.getColumnModel().getColumn(9).setPreferredWidth(60);
                tblClientes.getColumnModel().getColumn(10).setPreferredWidth(100);
            }
            else{
                JOptionPane.showMessageDialog(this,"Cliente n√£o encontrado.");
            }
         }
    }//GEN-LAST:event_btnPesquisarNomeActionPerformed

    private void btnPesquisarCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarCPFActionPerformed
         // TODO add your handling code here:
        
        if(txtCPF.getText().equals("   .   .   -  ")){
            JOptionPane.showMessageDialog(this,"Digite um CPF para realizar a pesquisa");
        }
        else{
        String cpfnormal = txtCPF.getText().replace(".", "").replace("-", "");
        ArrayList<Cliente> listaCliente = ClienteDAO.consultarClienteporCPF(cpfnormal);
        if(listaCliente.size()>0){   
            DefaultTableModel tmCliente = new DefaultTableModel()
                     {
		@Override
		public boolean isCellEditable(final int row, final int column) {
			return false;
		}
	};
            tmCliente.addColumn("Id_Cliente");
            tmCliente.addColumn("Nome");
            tmCliente.addColumn("CPF");
            tmCliente.addColumn("Sexo");
            tmCliente.addColumn("Estado Civil");
            tmCliente.addColumn("Email");
            tmCliente.addColumn("Telefone");
            tmCliente.addColumn("Rua");
            tmCliente.addColumn("Bairro");
            tmCliente.addColumn("CEP");
            tmCliente.addColumn("Cidade");


            tblClientes.setModel(tmCliente);

            //Removo a coluna ID da View (JTable) mas mantenho na model para armazenar o ID
            // tblMaquina.removeColumn(tblMaquina.getColumnModel().getColumn(0));

            //Limpo a tabela, excluindo todas as linhas para depois mostrar os dados novamente
            tmCliente.setRowCount(0);

            //Para cada cliente resgatado do banco de dados, atualizo a tabela
            for (Cliente c : listaCliente) {
                tmCliente.addRow(new Object[]{c.getIdCliente(),c.getNome(),c.getCPFSomenteNumeros(),c.getSexo(),c.getEstadoCivil(), c.getEmail(), c.getTelefone(), c.getRua(), c.getBairro(), c.getCEP(), c.getCidade()});
            }
            //Defino o tamanho para cada coluna
            //tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50); //ID
            tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblClientes.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblClientes.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblClientes.getColumnModel().getColumn(3).setPreferredWidth(70);
            tblClientes.getColumnModel().getColumn(4).setPreferredWidth(70);
            tblClientes.getColumnModel().getColumn(5).setPreferredWidth(150);
            tblClientes.getColumnModel().getColumn(6).setPreferredWidth(100);
            tblClientes.getColumnModel().getColumn(7).setPreferredWidth(150);
            tblClientes.getColumnModel().getColumn(8).setPreferredWidth(70);
            tblClientes.getColumnModel().getColumn(9).setPreferredWidth(60);
            tblClientes.getColumnModel().getColumn(10).setPreferredWidth(100);
            }
        else{
            JOptionPane.showMessageDialog(this,"Cliente nao encontrado.");
        }
       }
    }//GEN-LAST:event_btnPesquisarCPFActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed

        if(tblClientes.getSelectedRowCount()>0)
        {
            //Resgato o n√∫mero da linha pelo JTable
            int numeroLinha = tblClientes.getSelectedRow();

            //Resgato o ID (oculto) do cliente pelo JTableModel
            int Id_Cliente = Integer.parseInt(tblClientes.getModel().getValueAt(numeroLinha,0).toString());
            String nome = tblClientes.getModel().getValueAt(numeroLinha, 1).toString();
            String cpf = tblClientes.getModel().getValueAt(numeroLinha, 2).toString();
            String sexo = tblClientes.getModel().getValueAt(numeroLinha, 3).toString();
            String estado_civil = tblClientes.getModel().getValueAt(numeroLinha, 4).toString();
            String email = tblClientes.getModel().getValueAt(numeroLinha, 5).toString();
            String telefone = tblClientes.getModel().getValueAt(numeroLinha, 6).toString();
            String rua = tblClientes.getModel().getValueAt(numeroLinha, 7).toString();
            String bairro = tblClientes.getModel().getValueAt(numeroLinha, 8).toString();
            String cep = tblClientes.getModel().getValueAt(numeroLinha, 9).toString();
            String cidade = tblClientes.getModel().getValueAt(numeroLinha, 10).toString();
            
            objCliente.setIdCliente(Id_Cliente);
            objCliente.setNome(nome);
            objCliente.setCPF(cpf);
            objCliente.setSexo(sexo);
            objCliente.setEstadoCivil(estado_civil);
            objCliente.setEmail(email);
            objCliente.setTelefone(telefone);
            objCliente.setRua(rua);
            objCliente.setBairro(bairro);
            objCliente.setCEP(cep);
            objCliente.setCidade(cidade);

            //Passo o objeto para a tela de Cadastro informando que √© altera√ß√£o
            ViewClienteCadastrar viewclientecadastrar = new ViewClienteCadastrar(objCliente);

            viewclientecadastrar.modotela = "Altera√ß√£o";
            getParent().add(viewclientecadastrar);
            viewclientecadastrar.setVisible(true);

        }else{
            JOptionPane.showMessageDialog(this, "Selecione um cliente da tabela!");
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        ViewClienteCadastrar viewClienteCadastrar = new ViewClienteCadastrar();
        getParent().add(viewClienteCadastrar);
        viewClienteCadastrar.setVisible(true);
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed

        if(tblClientes.getSelectedRowCount()>0)
        {
            //Resgato o n√∫mero da linha pelo JTable
            int numeroLinha = tblClientes.getSelectedRow();

            //Resgato o ID (oculto) do cliente pelo JTableModel
            int Id_Cliente = Integer.parseInt(tblClientes.getModel().getValueAt(numeroLinha,0).toString());
            String nome = tblClientes.getModel().getValueAt(numeroLinha, 1).toString();
            String cpf = tblClientes.getModel().getValueAt(numeroLinha, 2).toString();
            String sexo = tblClientes.getModel().getValueAt(numeroLinha, 3).toString();
            String estado_civil = tblClientes.getModel().getValueAt(numeroLinha, 4).toString();
            String email = tblClientes.getModel().getValueAt(numeroLinha, 5).toString();
            String telefone = tblClientes.getModel().getValueAt(numeroLinha, 6).toString();
            String rua = tblClientes.getModel().getValueAt(numeroLinha, 7).toString();
            String bairro = tblClientes.getModel().getValueAt(numeroLinha, 8).toString();
            String cep = tblClientes.getModel().getValueAt(numeroLinha, 9).toString();
            String cidade = tblClientes.getModel().getValueAt(numeroLinha, 10).toString();

            objCliente.setIdCliente(Id_Cliente);
            objCliente.setNome(nome);
            objCliente.setCPF(cpf);
            objCliente.setSexo(sexo);
            objCliente.setEstadoCivil(estado_civil);
            objCliente.setEmail(email);
            objCliente.setTelefone(telefone);
            objCliente.setRua(rua);
            objCliente.setBairro(bairro);
            objCliente.setCEP(cep);
            objCliente.setCidade(cidade);

            boolean retorno = ClienteController.Excluir(objCliente);
            if(retorno == true){

                JOptionPane.showMessageDialog(this, "Cliente exclu√≠do com sucesso!");
            }else{
                JOptionPane.showMessageDialog(this, "Falha o excluir cliente!");
            }

            //Consulto novamente a base de dados
            CarregarJTable();

        }else{
            JOptionPane.showMessageDialog(this, "Selecione um cliente da tabela!");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed

        ArrayList<Cliente> listaCliente = ClienteDAO.consultarClientes();

        DefaultTableModel tmCliente = new DefaultTableModel()
                {
		@Override
		public boolean isCellEditable(final int row, final int column) {
			return false;
		}
	};
        tmCliente.addColumn("Id_Cliente");
        tmCliente.addColumn("Nome");
        tmCliente.addColumn("CPF");
        tmCliente.addColumn("Sexo");
        tmCliente.addColumn("Estado Civil");
        tmCliente.addColumn("Email");
        tmCliente.addColumn("Telefone");
        tmCliente.addColumn("Rua");
        tmCliente.addColumn("Bairro");
        tmCliente.addColumn("CEP");
        tmCliente.addColumn("Cidade");

        tblClientes.setModel(tmCliente);

        //Removo a coluna ID da View (JTable) mas mantenho na model para armazenar o ID
        // tblMaquina.removeColumn(tblMaquina.getColumnModel().getColumn(0));

        //Limpo a tabela, excluindo todas as linhas para depois mostrar os dados novamente
        tmCliente.setRowCount(0);

        //Para cada cliente resgatado do banco de dados, atualizo a tabela
        for (Cliente c : listaCliente) {
                tmCliente.addRow(new Object[]{c.getIdCliente(),c.getNome(),c.getCPFSomenteNumeros(),c.getSexo(),c.getEstadoCivil(), c.getEmail(), c.getTelefone(), c.getRua(), c.getBairro(), c.getCEP(), c.getCidade()});
            }
            //Defino o tamanho para cada coluna
            //tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50); //ID
            tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblClientes.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblClientes.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblClientes.getColumnModel().getColumn(3).setPreferredWidth(70);
            tblClientes.getColumnModel().getColumn(4).setPreferredWidth(70);
            tblClientes.getColumnModel().getColumn(5).setPreferredWidth(150);
            tblClientes.getColumnModel().getColumn(6).setPreferredWidth(100);
            tblClientes.getColumnModel().getColumn(7).setPreferredWidth(150);
            tblClientes.getColumnModel().getColumn(8).setPreferredWidth(70);
            tblClientes.getColumnModel().getColumn(9).setPreferredWidth(60);
            tblClientes.getColumnModel().getColumn(10).setPreferredWidth(100);
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

     public void CarregarJTable(){
        
        //Pe√ßo √† classe DAO para consultar os clientes
//        String[] nomes = new String[5];
//        String[] cpfs = new String[5];
        
        
        ArrayList<Cliente> listaCliente = ClienteDAO.consultarClientes();
        
       
        DefaultTableModel tmCliente = new DefaultTableModel(){
		@Override
		public boolean isCellEditable(final int row, final int column) {
			return false;
		}
	};;
        tmCliente.addColumn("Id_Cliente");
        tmCliente.addColumn("Nome");
        tmCliente.addColumn("CPF");
        tmCliente.addColumn("Sexo");
        tmCliente.addColumn("Estado Civil");
        tmCliente.addColumn("Email");
        tmCliente.addColumn("Telefone");
        tmCliente.addColumn("Rua");
        tmCliente.addColumn("Bairro");
        tmCliente.addColumn("CEP");
        tmCliente.addColumn("Cidade");
        
        //Defina sua estrutura com a estrutura tmClientes;
        tblClientes.setModel(tmCliente);
        
        
        //tblClientes.removeColumn(tblClientes.getColumnModel().getColumn(0));
        
        //Limpo a tabela, excluindo todas as linhas para depois mostrar os dados novamente
        tmCliente.setRowCount(0);
        
        //Para cada cliente resgatado do banco de dados, atualizo a tabela
//        for(int i=0;i<listaClientes.size();i++){
//            Maquina objCliente = new Maquina();
//            objCliente =  (Maquina)listaClientes.get(i);
//            objCliente.setId(objCliente.getId());
//            
//            tmClientes.addRow(new Object[]{objCliente.getId(),objCliente.getNome(),objCliente.getCPF()});
//        }
        for (Cliente c : listaCliente) {
                tmCliente.addRow(new Object[]{c.getIdCliente(),c.getNome(),c.getCPFSomenteNumeros(),c.getSexo(),c.getEstadoCivil(), c.getEmail(), c.getTelefone(), c.getRua(), c.getBairro(), c.getCEP(), c.getCidade()});
            }
            //Defino o tamanho para cada coluna
            //tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50); //ID
            tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblClientes.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblClientes.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblClientes.getColumnModel().getColumn(3).setPreferredWidth(70);
            tblClientes.getColumnModel().getColumn(4).setPreferredWidth(70);
            tblClientes.getColumnModel().getColumn(5).setPreferredWidth(150);
            tblClientes.getColumnModel().getColumn(6).setPreferredWidth(100);
            tblClientes.getColumnModel().getColumn(7).setPreferredWidth(150);
            tblClientes.getColumnModel().getColumn(8).setPreferredWidth(70);
            tblClientes.getColumnModel().getColumn(9).setPreferredWidth(60);
            tblClientes.getColumnModel().getColumn(10).setPreferredWidth(100);
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnPesquisarCPF;
    private javax.swing.JButton btnPesquisarNome;
    private javax.swing.JButton btnPesquisarid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblClientes;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
